<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.skshieldus.esecurity.repository.secrtactvy.SecretBoxCheckRepository">

	<select id="selectSecretBoxCheckList" parameterType="Map" resultType="CamelHashMap">
	/* 비밀문서함 점검결과 목록 조회 - repository.selectSecretBoxCheckList */
	SELECT * FROM (
	    SELECT
	           NULL AS SCBOX_CHK_APPL_NO
	         , A.YEAR
	         , A.QUARTER
	         , A.SRV_GRP_ID
	         , A.PANEL_ID
	         , A.SRV_ID
	         , A.CHK_DT
	         , A.SCBOX_NM
	         , A.MNG_DEPT_NM
	         , A.CHKR_EMP_ID
	         , FN_GET_EMP_NM(A.CHKR_EMP_ID) AS CHKR_EMP_NM
			 , FN_GET_JW_BY_EMP(A.CHKR_EMP_ID) AS CHKR_JW_NM
			 , FN_GET_DEPT_NM(FN_GET_DEPT_ID(A.CHKR_EMP_ID)) AS CHKR_DEPT_NM
	         , NVL(A.CHKR_EMAIL_ADDR, FN_GET_EMP_MAIL(A.CHKR_EMAIL_ADDR)) AS CHKR_EMAIL_ADDR
	         , '' AS RESULT_GRADE
	         , B.RESULT_POINTS AS RESULT_POINTS
	         , B.PERFECT_POINTS AS PERFECT_POINTS
	         , NULL AS DOC_ID
	         , '' AS APPL_STAT
	         , '미상신' AS APPL_STAT_NM
	         , '' AS EMP_ID
			 , '' AS EMP_NM
			 , '' AS JW_NM
			 , '' AS DEPT_NM
	         , '' AS CRT_DTM
	      FROM NEWEGSSPRJ.ESECU_SCBOX_CHK_MST A
		     , (SELECT
		              SRV_ID
		            , SRV_GRP_ID
		            , PANEL_ID
		            , SUM(RESULT_POINT) AS RESULT_POINTS
		            , SUM(PERFECT_POINT) AS PERFECT_POINTS
		       FROM NEWEGSSPRJ.ESECU_SCBOX_CHK_DTL
		      GROUP BY 
		              SRV_ID
		            , SRV_GRP_ID
		            , PANEL_ID
		    ) B
		 WHERE 1 = 1
		   AND A.SRV_ID = B.SRV_ID
		   AND A.SRV_GRP_ID = B.SRV_GRP_ID
		   AND A.PANEL_ID = B.PANEL_ID
		   AND (A.SRV_ID, A.SRV_GRP_ID, A.PANEL_ID) NOT IN (
		     SELECT SRV_ID, SRV_GRP_ID, PANEL_ID FROM SC_SCBOX_CHK
		   )
	    UNION 
	    SELECT
	           SCBOX_CHK_APPL_NO
	         , YEAR
	         , QUARTER
	         , SRV_GRP_ID
	         , PANEL_ID
	         , SRV_ID
	         , CHK_DT
	         , SCBOX_NM
	         , MNG_DEPT_NM
	         , CHKR_EMP_ID
	         , FN_GET_EMP_NM(CHKR_EMP_ID) AS CHKR_EMP_NM
			 , FN_GET_JW_BY_EMP(CHKR_EMP_ID) AS CHKR_JW_NM
			 , FN_GET_DEPT_NM(FN_GET_DEPT_ID(CHKR_EMP_ID)) AS CHKR_DEPT_NM 
	         , FN_GET_EMP_MAIL(CHKR_EMP_ID) AS CHKR_EMAIL_ADDR
	         , RESULT_GRADE
	         , RESULT_POINTS
	         , PERFECT_POINTS
	         , DOC_ID
	         , APPL_STAT
	         , FN_GET_CODE_ETC1('Z033', APPL_STAT) AS APPL_STAT_NM
	         , CRT_BY AS EMP_ID
			 , FN_GET_EMP_NM(CRT_BY) AS EMP_NM
			 , FN_GET_JW_BY_EMP(CRT_BY) AS JW_NM
			 , FN_GET_DEPT_NM(FN_GET_DEPT_ID(CRT_BY)) AS DEPT_NM 
	         , TO_CHAR(CRT_DTM, 'YYYY-MM-DD') AS CRT_DTM
	      FROM SC_SCBOX_CHK
	     WHERE DEL_YN = 'N'
	) T
	WHERE 1 = 1
        <if test="not @org.springframework.util.StringUtils@isEmpty(searchYear)">
      AND T.YEAR = #{searchYear}
        </if>
        <if test="not @org.springframework.util.StringUtils@isEmpty(searchQuarter)">
      AND T.QUARTER = #{searchQuarter}
        </if>
        <if test="not @org.springframework.util.StringUtils@isEmpty(searchApplStat)">
      AND CASE WHEN T.APPL_STAT IS NULL      THEN '1'
               WHEN T.APPL_STAT = 'Z0331002' THEN '2'
               WHEN T.APPL_STAT = 'Z0331003' THEN '3'
               WHEN T.APPL_STAT = 'Z0331004' THEN '3'
          ELSE '4' END = #{searchApplStat}
        </if>
        <if test="not @org.springframework.util.StringUtils@isEmpty(searchScBoxNm)">
      AND UPPER(T.SCBOX_NM) LIKE '%'||UPPER(#{searchScBoxNm})||'%'
        </if>
        <if test="not @org.springframework.util.StringUtils@isEmpty(searchDeptNm)">
      AND UPPER(T.MNG_DEPT_NM) LIKE '%'||UPPER(#{searchDeptNm})||'%'
        </if>
        <if test="not @org.springframework.util.StringUtils@isEmpty(searchEmpNm)">
      AND (UPPER(T.CHKR_EMP_NM) LIKE '%'||UPPER(#{searchEmpNm})||'%'
        OR UPPER(T.CHKR_EMAIL_ADDR) LIKE '%'||UPPER(#{searchEmpNm})||'%'
        OR UPPER(T.CHKR_EMP_ID) = UPPER(#{searchEmpNm})
      )
        </if>
        <if test="not @org.springframework.util.StringUtils@isEmpty(searchEmpId)">
      /* 사번 뿐 아니라 이메일로도 조회하는 것은 EGSS에 설문대상자 등록할 때 사번 없이 이메일만 등록할 수 있기 때문이다. */
      AND (UPPER(T.CHKR_EMAIL_ADDR) LIKE '%'||UPPER(FN_GET_EMP_MAIL(#{searchEmpId}))||'%'
        OR T.CHKR_EMP_ID = #{searchEmpId}
      )
        </if>
    ORDER By SCBOX_CHK_APPL_NO DESC, CHK_DT DESC
  	</select>
	
	<select id="selectSecretBoxCheck" parameterType="Integer" resultType="CamelHashMap">
	/* 비밀문서함 점검결과 상세 조회 - repository.selectSecretBoxCheck */
    SELECT
           SCBOX_CHK_APPL_NO
         , YEAR
         , QUARTER
         , SRV_GRP_ID
         , PANEL_ID
         , SRV_ID
         , CHK_DT
         , SCBOX_NM
         , MNG_DEPT_NM
         , CHKR_EMP_ID
         , FN_GET_EMP_NM(CHKR_EMP_ID) AS CHKR_EMP_NM
         , FN_GET_JW_BY_EMP(CHKR_EMP_ID) AS CHKR_JW_NM
         , FN_GET_EMP_MAIL(CHKR_EMP_ID) AS CHKR_EMAIL_ADDR
         , FN_GET_EMP_DEPT_NM(CHKR_EMP_ID) AS CHKR_DEPT_NM
         , RESULT_GRADE
         , RESULT_POINTS
         , PERFECT_POINTS
         , DOC_ID
         , APPL_STAT
         , CRT_BY
         , TO_CHAR(CRT_DTM, 'YYYY-MM-DD') AS CRT_DTM
         , CHK_TITLE
         , CHK_DESCRIPTION
         , CHK_RESULT_SUMMARY
         , DOC_ID
         , APPL_STAT
         , DEL_YN
         , FILE_URL1
         , FILE_NAME1
         , FILE_URL2
         , FILE_NAME2
         , FILE_URL3
         , FILE_NAME3
         , FILE_URL4
         , FILE_NAME4
         , FILE_URL5
         , FILE_NAME5
      FROM SC_SCBOX_CHK
     WHERE SCBOX_CHK_APPL_NO = #{scboxChkApplNo}
	</select>

	<select id="selectEGSSSecretBoxCheckMaster" parameterType="Map" resultType="CamelHashMap">
	/* 비밀문서함 점검결과 EGSS 기본정보 조회 - repository.selectEGSSSecretBoxCheckMaster */
	
    SELECT
           NULL AS SCBOX_CHK_APPL_NO
         , A.YEAR
         , A.QUARTER
         , A.SRV_GRP_ID
         , A.PANEL_ID
         , A.SRV_ID
         , A.CHK_DT
         , A.SCBOX_NM
         , A.MNG_DEPT_NM
         , A.CHKR_EMP_ID
         , NVL(FN_GET_EMP_NM(A.CHKR_EMP_ID),' ') AS CHKR_EMP_NM
         , NVL(FN_GET_JW_BY_EMP(A.CHKR_EMP_ID),' ') AS CHKR_JW_NM
         , NVL(FN_GET_EMP_DEPT_NM(A.CHKR_EMP_ID),' ') AS CHKR_DEPT_NM
         , NVL(A.CHKR_EMAIL_ADDR, FN_GET_EMP_MAIL(A.CHKR_EMAIL_ADDR)) AS CHKR_EMAIL_ADDR
         , '' AS RESULT_GRADE
         , B.RESULT_POINTS AS RESULT_POINTS
         , B.PERFECT_POINTS AS PERFECT_POINTS
         , NULL AS DOC_ID
         , '' AS APPL_STAT
         , '미상신' AS APPL_STAT_NM
         , '' AS CRT_BY
         , '' AS CRT_DTM
      FROM NEWEGSSPRJ.ESECU_SCBOX_CHK_MST A
	     , (SELECT
	              SRV_ID
	            , SRV_GRP_ID
	            , PANEL_ID
	            , SUM(RESULT_POINT) AS RESULT_POINTS
	            , SUM(PERFECT_POINT) AS PERFECT_POINTS
	       FROM NEWEGSSPRJ.ESECU_SCBOX_CHK_DTL
	      GROUP BY 
	              SRV_ID
	            , SRV_GRP_ID
	            , PANEL_ID
	    ) B
	 WHERE 1 = 1
	   AND A.SRV_ID = B.SRV_ID
	   AND A.SRV_GRP_ID = B.SRV_GRP_ID
	   AND A.PANEL_ID = B.PANEL_ID
	   AND A.SRV_ID = #{srvId}
	   AND A.SRV_GRP_ID = #{srvGrpId}
	   AND A.PANEL_ID = #{panelId}
	</select>
	
	<select id="selectEGSSSecretBoxCheckSummary" parameterType="Map" resultType="CamelHashMap">
	/* 비밀문서함 점검결과 점수 목록 EGSS 조회 - repository.selectEGSSSecretBoxCheckSummary */
SELECT * FROM (
	SELECT
	       A.SRV_ID
	     , A.QSTNAR_BASE_ID
	     , A.SRV_GRP_ID
	     , A.PANEL_ID
	     , A.QSTNAR_QST_ID
	     , A.QSTNAR_QST_LINEUP_NO
	     , TO_NUMBER(A.QST_NO) AS QST_NO
	     , A.QSTNAR_QST_QUES
	     , B.PERFECT_POINTS
	     , B.RESULT_POINTS
	     , DECODE(B.EXTRA_YN, 'Y', '가점반영', '') AS REMARK
	     , 'N' AS EXTRA_ONLY_YN
	  FROM NEWEGSSPRJ.ESECU_SCBOX_CHK_DTL A,
	  (SELECT 
	           SRV_ID
	         , QSTNAR_BASE_ID
	         , SRV_GRP_ID
	         , PANEL_ID
	         , QST_NO
	         , MAX(EXTRA_YN) AS EXTRA_YN
	         , SUM(RESULT_POINT) AS RESULT_POINTS
	         , SUM(PERFECT_POINT) AS PERFECT_POINTS
	      FROM NEWEGSSPRJ.ESECU_SCBOX_CHK_DTL
	     WHERE 1 = 1
	       AND QST_NO IS NOT NULL
	       AND (EXTRA_YN = 'N' OR (EXTRA_YN ='Y' AND RESULT_POINT > 0 AND QSTNAR_QST_QUES IS NULL))
	     GROUP BY
	           SRV_ID
	         , QSTNAR_BASE_ID
	         , SRV_GRP_ID
	         , PANEL_ID
	         , QST_NO
	     ) B
	 WHERE 1 = 1
	   AND A.SRV_ID = B.SRV_ID
	   AND A.SRV_GRP_ID = B.SRV_GRP_ID
	   AND A.PANEL_ID = B.PANEL_ID
	   AND A.QSTNAR_BASE_ID = B.QSTNAR_BASE_ID
	   AND A.QST_NO = B.QST_NO
	   AND A.QSTNAR_QST_QUES IS NOT NULL
	UNION ALL
	SELECT
	       A.SRV_ID
	     , A.QSTNAR_BASE_ID
	     , A.SRV_GRP_ID
	     , A.PANEL_ID
	     , A.QSTNAR_QST_ID
	     , A.QSTNAR_QST_LINEUP_NO
	     , TO_NUMBER(A.QST_NO) AS QST_NO
	     , A.QSTNAR_QST_QUES
	     , 0 AS PERFECT_POINTS
	     , RESULT_POINT AS RESULT_POINTS
	     , DECODE(A.EXTRA_YN, 'Y', DECODE(RESULT_POINT, 0, '', '가점반영'), '') AS REMARK
	     , 'Y' AS EXTRA_ONLY_YN
	  FROM NEWEGSSPRJ.ESECU_SCBOX_CHK_DTL A
	 WHERE 1 = 1
	   AND A.QSTNAR_QST_QUES IS NOT NULL
	   AND EXTRA_YN = 'Y'
	) T
 WHERE 1 = 1
   AND T.SRV_ID = #{srvId}
   AND T.SRV_GRP_ID = #{srvGrpId}
   AND T.PANEL_ID = #{panelId}
 ORDER BY T.QSTNAR_QST_LINEUP_NO
	</select>
	
	<select id="selectSecretBoxCheckExcelList" parameterType="Map" resultType="CamelHashMap" timeout="60">
	/* 비밀문서함 점검결과 목록 조회 엑셀 저장 - repository.selectSecretBoxCheckExcelList */
	    <![CDATA[
	SELECT 
          T1.YEAR
        , T1.QUARTER
        , T1.SCBOX_NM
        , T1.MNG_DEPT_NM
        , T1.CHKR_EMP_ID
        , T1.CHKR_EMP_NM || ' ' || T1.CHKR_JW_NM AS CHKR_EMP_NM
        , T1.CHK_DT
        , NVL(TO_CHAR(T2."1"), '-') AS NO_1
        , NVL(TO_CHAR(T2."2"), '-') AS NO_2
        , NVL(TO_CHAR(T2."3"), '-') AS NO_3
        , NVL(TO_CHAR(T2."4"), '-') AS NO_4
        , NVL(TO_CHAR(T2."5"), '-') AS NO_5
        , NVL(TO_CHAR(T2."6"), '-') AS NO_6
        , NVL(TO_CHAR(T2."7"), '-') AS NO_7
        , NVL(TO_CHAR(T2."8"), '-') AS NO_8
        , NVL(TO_CHAR(T2."9"), '-') AS NO_9
        , NVL(TO_CHAR(T2."10"), '-') AS NO_10
        , NVL(TO_CHAR(T2."11"), '-') AS NO_11
        , NVL(TO_CHAR(T2."12"), '-') AS NO_12
        , NVL(TO_CHAR(T2."13"), '-') AS NO_13
        , NVL(TO_CHAR(T2."14"), '-') AS NO_14
        , NVL(TO_CHAR(T2."15"), '-') AS NO_15
        , NVL(TO_CHAR(T2."16"), '-') AS NO_16
        , NVL(TO_CHAR(T2."17"), '-') AS NO_17
        , NVL(TO_CHAR(T2."18"), '-') AS NO_18
        , NVL(TO_CHAR(T2."19"), '-') AS NO_19
        , NVL(TO_CHAR(T2."20"), '-') AS NO_20
        , T1.RESULT_POINTS
        , CASE WHEN T1.RESULT_POINTS >= 90 THEN '우수'
               WHEN T1.RESULT_POINTS >= 80 AND T1.RESULT_POINTS < 90 THEN '양호'
               WHEN T1.RESULT_POINTS >= 70 AND T1.RESULT_POINTS < 80 THEN '미흡'
               WHEN T1.RESULT_POINTS < 70 THEN '위험'
          END AS GRADE
        , T1.APPL_STAT_NM
        , T1.APPROVED_DTM
    FROM (
	    SELECT
	           NULL AS SCBOX_CHK_APPL_NO
	         , A.YEAR
	         , A.QUARTER
	         , A.SRV_GRP_ID
	         , A.PANEL_ID
	         , A.SRV_ID
	         , A.CHK_DT
	         , A.SCBOX_NM
	         , A.MNG_DEPT_NM
	         , A.CHKR_EMP_ID
	         , FN_GET_EMP_NM(A.CHKR_EMP_ID) AS CHKR_EMP_NM
			 , FN_GET_JW_BY_EMP(A.CHKR_EMP_ID) AS CHKR_JW_NM
			 , FN_GET_DEPT_NM(FN_GET_DEPT_ID(A.CHKR_EMP_ID)) AS CHKR_DEPT_NM
	         , NVL(A.CHKR_EMAIL_ADDR, FN_GET_EMP_MAIL(A.CHKR_EMAIL_ADDR)) AS CHKR_EMAIL_ADDR
	         , '' AS RESULT_GRADE
	         , B.RESULT_POINTS AS RESULT_POINTS
	         , B.PERFECT_POINTS AS PERFECT_POINTS
	         , NULL AS DOC_ID
	         , '' AS APPL_STAT
	         , '미상신' AS APPL_STAT_NM
	         , '' AS EMP_ID
			 , '' AS EMP_NM
			 , '' AS JW_NM
			 , '' AS DEPT_NM
	         , '' AS CRT_DTM
             , '' AS APPROVED_DTM
	      FROM NEWEGSSPRJ.ESECU_SCBOX_CHK_MST A
		     , (SELECT
		              SRV_ID
		            , SRV_GRP_ID
		            , PANEL_ID
		            , SUM(RESULT_POINT) AS RESULT_POINTS
		            , SUM(PERFECT_POINT) AS PERFECT_POINTS
		       FROM NEWEGSSPRJ.ESECU_SCBOX_CHK_DTL
		      GROUP BY 
		              SRV_ID
		            , SRV_GRP_ID
		            , PANEL_ID
		    ) B
		 WHERE 1 = 1
		   AND A.SRV_ID = B.SRV_ID
		   AND A.SRV_GRP_ID = B.SRV_GRP_ID
		   AND A.PANEL_ID = B.PANEL_ID
		   AND (A.SRV_ID, A.SRV_GRP_ID, A.PANEL_ID) NOT IN (
		     SELECT SRV_ID, SRV_GRP_ID, PANEL_ID FROM SC_SCBOX_CHK
		   )
	    UNION 
	    SELECT
	           SCBOX_CHK_APPL_NO
	         , YEAR
	         , QUARTER
	         , SRV_GRP_ID
	         , PANEL_ID
	         , SRV_ID
	         , CHK_DT
	         , SCBOX_NM
	         , MNG_DEPT_NM
	         , CHKR_EMP_ID
	         , FN_GET_EMP_NM(CHKR_EMP_ID) AS CHKR_EMP_NM
			 , FN_GET_JW_BY_EMP(CHKR_EMP_ID) AS CHKR_JW_NM
			 , FN_GET_DEPT_NM(FN_GET_DEPT_ID(CHKR_EMP_ID)) AS CHKR_DEPT_NM 
	         , FN_GET_EMP_MAIL(CHKR_EMP_ID) AS CHKR_EMAIL_ADDR
	         , RESULT_GRADE
	         , RESULT_POINTS
	         , PERFECT_POINTS
	         , DOC_ID
	         , APPL_STAT
	         , FN_GET_CODE_ETC1('Z033', APPL_STAT) AS APPL_STAT_NM
	         , CRT_BY AS EMP_ID
			 , FN_GET_EMP_NM(CRT_BY) AS EMP_NM
			 , FN_GET_JW_BY_EMP(CRT_BY) AS JW_NM
			 , FN_GET_DEPT_NM(FN_GET_DEPT_ID(CRT_BY)) AS DEPT_NM 
	         , TO_CHAR(CRT_DTM, 'YYYY-MM-DD') AS CRT_DTM
             , TO_CHAR(APPROVED_DTM, 'YYYY-MM-DD') AS APPROVED_DTM
	      FROM SC_SCBOX_CHK
	     WHERE DEL_YN = 'N'
	) T1,
    (
        SELECT * FROM (
            SELECT 
                   T.SRV_ID
                 , T.QSTNAR_BASE_ID
                 , T.SRV_GRP_ID
                 , T.PANEL_ID
                 , TO_NUMBER(T.QST_NO) AS QST_NO
                 , T.RESULT_POINTS
              FROM (
                SELECT
                       A.SRV_ID
                     , A.QSTNAR_BASE_ID
                     , A.SRV_GRP_ID
                     , A.PANEL_ID
                     , A.QSTNAR_QST_ID
                     , A.QSTNAR_QST_LINEUP_NO
                     , A.QST_NO
                     , A.QSTNAR_QST_QUES
                     , B.RESULT_POINTS
                  FROM NEWEGSSPRJ.ESECU_SCBOX_CHK_DTL A,
                      (SELECT 
                               SRV_ID
                             , QSTNAR_BASE_ID
                             , SRV_GRP_ID
                             , PANEL_ID
                             , QST_NO
                             , MAX(EXTRA_YN) AS EXTRA_YN
                             , SUM(RESULT_POINT) AS RESULT_POINTS
                          FROM NEWEGSSPRJ.ESECU_SCBOX_CHK_DTL
                         WHERE 1 = 1
                           AND QST_NO IS NOT NULL
                           AND (EXTRA_YN = 'N' OR 
                                (EXTRA_YN ='Y' AND RESULT_POINT > 0 AND QSTNAR_QST_QUES IS NULL)
                                )
                         GROUP BY
                               SRV_ID
                             , QSTNAR_BASE_ID
                             , SRV_GRP_ID
                             , PANEL_ID
                             , QST_NO
                      ) B
                 WHERE 1 = 1
                   AND A.SRV_ID = B.SRV_ID
                   AND A.SRV_GRP_ID = B.SRV_GRP_ID
                   AND A.PANEL_ID = B.PANEL_ID
                   AND A.QSTNAR_BASE_ID = B.QSTNAR_BASE_ID
                   AND A.QST_NO = B.QST_NO
                   AND A.QSTNAR_QST_QUES IS NOT NULL
                UNION ALL
                /* 12, 13번 가점문항처럼 문항질문에 값이 있고 가점인 문항 조회 */
                SELECT
                       A.SRV_ID
                     , A.QSTNAR_BASE_ID
                     , A.SRV_GRP_ID
                     , A.PANEL_ID
                     , A.QSTNAR_QST_ID
                     , A.QSTNAR_QST_LINEUP_NO
                     , A.QST_NO
                     , A.QSTNAR_QST_QUES
                     , RESULT_POINT AS RESULT_POINTS
                  FROM NEWEGSSPRJ.ESECU_SCBOX_CHK_DTL A
                 WHERE 1 = 1
                   AND A.QSTNAR_QST_QUES IS NOT NULL
                   AND EXTRA_YN = 'Y'
            ) T
             WHERE 1 = 1
        )
        PIVOT
        (
            SUM(RESULT_POINTS)
            FOR
            QST_NO IN (1, 2, 3, 4, 5, 6, 7, 8, 9, 10,
                       11,12,13,14,15,16,17,18,19,20)
        )
    ) T2
	WHERE 1 = 1
      AND T1.SRV_ID = T2.SRV_ID
      AND T1.SRV_GRP_ID = T2.SRV_GRP_ID
      AND T1.PANEL_ID = T2.PANEL_ID
        ]]>
        <if test="not @org.springframework.util.StringUtils@isEmpty(searchYear)">
      AND T1.YEAR = #{searchYear}
        </if>
        <if test="not @org.springframework.util.StringUtils@isEmpty(searchQuarter)">
      AND T1.QUARTER = #{searchQuarter}
        </if>
        <if test="not @org.springframework.util.StringUtils@isEmpty(searchApplStat)">
      AND CASE WHEN T1.APPL_STAT IS NULL      THEN '1'
               WHEN T1.APPL_STAT = 'Z0331002' THEN '2'
               WHEN T1.APPL_STAT = 'Z0331003' THEN '3'
               WHEN T1.APPL_STAT = 'Z0331004' THEN '3'
          ELSE '4' END = #{searchApplStat}
        </if>
        <if test="not @org.springframework.util.StringUtils@isEmpty(searchScBoxNm)">
      AND UPPER(T1.SCBOX_NM) LIKE '%'||UPPER(#{searchScBoxNm})||'%'
        </if>
        <if test="not @org.springframework.util.StringUtils@isEmpty(searchDeptNm)">
      AND UPPER(T1.MNG_DEPT_NM) LIKE '%'||UPPER(#{searchDeptNm})||'%'
        </if>
        <if test="not @org.springframework.util.StringUtils@isEmpty(searchEmpNm)">
      AND (UPPER(T1.CHKR_EMP_NM) LIKE '%'||UPPER(#{searchEmpNm})||'%'
        OR UPPER(T1.CHKR_EMAIL_ADDR) LIKE '%'||UPPER(#{searchEmpNm})||'%'
        OR UPPER(T1.CHKR_EMP_ID) = UPPER(#{searchEmpNm})
      )
        </if>
        <if test="not @org.springframework.util.StringUtils@isEmpty(searchEmpId)">
      /* 사번 뿐 아니라 이메일로도 조회하는 것은 EGSS에 설문대상자 등록할 때 사번 없이 이메일만 등록할 수 있기 때문이다. */
      AND (UPPER(T1.CHKR_EMAIL_ADDR) LIKE '%'||UPPER(FN_GET_EMP_MAIL(#{searchEmpId}))||'%'
        OR T1.CHKR_EMP_ID = #{searchEmpId}
      )
        </if>
	</select>
	
	<select id="selectEGSSSecretBoxCheckQstList" parameterType="Map" resultType="CamelHashMap">
	/* 비밀문서함 점검결과 EGSS 점검문항 목록 조회 - repository.selectEGSSSecretBoxCheckQstList */
    SELECT DISTINCT
           SRV_ID
         , TO_NUMBER(QST_NO) AS QST_NO
         , QSTNAR_QST_QUES
         , PERFECT_POINT AS PERFECT_POINTS
      FROM NEWEGSSPRJ.ESECU_SCBOX_CHK_DTL
     WHERE 1 = 1
       AND QSTNAR_QST_QUES IS NOT NULL
       AND QST_NO IS NOT NULL
       AND SRV_ID IN (
            SELECT SRV_ID FROM NEWEGSSPRJ.ESECU_SCBOX_CHK_MST
             WHERE 1 = 1
        <if test="not @org.springframework.util.StringUtils@isEmpty(searchYear)">
               AND YEAR = #{searchYear}
        </if>
        <if test="not @org.springframework.util.StringUtils@isEmpty(searchQuarter)">
               AND QUARTER = #{searchQuarter}
        </if>
        <if test="not @org.springframework.util.StringUtils@isEmpty(searchApplStat)">
		       AND CASE WHEN APPL_STAT IS NULL      THEN '1'
		                WHEN APPL_STAT = 'Z0331002' THEN '2'
		                WHEN APPL_STAT = 'Z0331003' THEN '3'
		                WHEN APPL_STAT = 'Z0331004' THEN '3'
		           ELSE '4' END = #{searchApplStat}
        </if>
        <if test="not @org.springframework.util.StringUtils@isEmpty(searchScBoxNm)">
               AND UPPER(SCBOX_NM) LIKE '%'||UPPER(#{searchScBoxNm})||'%'
        </if>
        <if test="not @org.springframework.util.StringUtils@isEmpty(searchDeptNm)">
               AND UPPER(MNG_DEPT_NM) LIKE '%'||UPPER(#{searchDeptNm})||'%'
        </if>
        <if test="not @org.springframework.util.StringUtils@isEmpty(searchEmpNm)">
		       AND (UPPER(CHKR_EMP_NM) LIKE '%'||UPPER(#{searchEmpNm})||'%'
		           OR UPPER(CHKR_EMAIL_ADDR) LIKE '%'||UPPER(#{searchEmpNm})||'%'
		           OR UPPER(CHKR_EMP_ID) = UPPER(#{searchEmpNm})
		       )
        </if>
        <if test="not @org.springframework.util.StringUtils@isEmpty(searchEmpId)">
               /* 사번 뿐 아니라 이메일로도 조회하는 것은 EGSS에 설문대상자 등록할 때 사번 없이 이메일만 등록할 수 있기 때문이다. */
               AND (UPPER(CHKR_EMAIL_ADDR) LIKE '%'||UPPER(FN_GET_EMP_MAIL(#{searchEmpId}))||'%'
                   OR CHKR_EMP_ID = #{searchEmpId}
               )
        </if>
          )
    ORDER BY SRV_ID DESC, TO_NUMBER(QST_NO)
	</select>
	
	<select id="selectSecretBoxCheckSeq" resultType="Integer">
	/* 비밀문서함 점검결과 상신 점검번호 채번 - repository.selectSecretBoxCheckSeq */
	SELECT
		SEQ_SC_SCBOX_CHK.NEXTVAL AS SCBOX_CHK_APPL_NO
	FROM DUAL
	</select>
	
	<insert id="insertSecretBoxCheck" parameterType="Map">
	/* 비밀문서함 점검결과 상신 - repository.insertSecretBoxCheck */
	INSERT INTO SC_SCBOX_CHK
	(
		  SCBOX_CHK_APPL_NO
		, YEAR
		, QUARTER
		, SRV_ID
		, SRV_GRP_ID
		, PANEL_ID
		, CHKR_EMP_ID
		, CHK_DT
		, SCBOX_NM
		, MNG_DEPT_NM
		, RESULT_GRADE
		, RESULT_POINTS
		, PERFECT_POINTS
		, CHK_TITLE
		, CHK_DESCRIPTION
		, CHK_RESULT_SUMMARY
		, DOC_ID
		, APPL_STAT
		, DEL_YN
		, AC_IP
		, CRT_BY
		, CRT_DTM
		, MOD_BY
		, MOD_DTM
		, FILE_URL1
		, FILE_NAME1
		, FILE_URL2
		, FILE_NAME2
		, FILE_URL3
		, FILE_NAME3
		, FILE_URL4
		, FILE_NAME4
		, FILE_URL5
		, FILE_NAME5
	)
	VALUES
	(
		  #{scboxChkApplNo}
		, #{year}
		, #{quarter}
		, #{srvId}
		, #{srvGrpId}
		, #{panelId}
		, #{chkrEmpId}
		, #{chkDt}
		, #{scboxNm}
		, #{mngDeptNm}
		, #{resultGrade}
		, #{resultPoints}
		, #{perfectPoints}
		, #{chkTitle}
		, #{chkDescription}
		, #{chkResultSummary}
		, #{docId}
		, #{applStat}
		, 'N'
		, #{acIp}
		, #{crtBy}
		, SYSDATE
		, #{crtBy}
		, SYSDATE
		, #{fileUrl1}
		, #{fileName1}
		, #{fileUrl2}
		, #{fileName2}
		, #{fileUrl3}
		, #{fileName3}
		, #{fileUrl4}
		, #{fileName4}
		, #{fileUrl5}
		, #{fileName5}
	)
	</insert>

    <update id="updateSecretBoxCheckDocId" parameterType="Map">
    /* 비밀문서함 점검결과 상신 문서 번호 업데이트 repository.updateSecretBoxCheckDocId */
    UPDATE SC_SCBOX_CHK SET
           DOC_ID = #{docId}
         , MOD_BY = #{crtBy}
         , MOD_DTM = SYSDATE
     WHERE SCBOX_CHK_APPL_NO = #{scboxChkApplNo}
    </update>

    <update id="updateSecretBoxCheckApplStat" parameterType="Map" >
    /* 비밀문서함 점검결과 상신 승인 결과 업데이트 repository.updateSecretBoxCheckApplStat */
    UPDATE SC_SCBOX_CHK SET
           APPL_STAT = #{applStat}
        <if test='not @org.springframework.util.StringUtils@isEmpty(applStat) and "Z0331005".equals(applStat)'>
         , APPROVED_DTM = SYSDATE
        </if>
         , MOD_BY = #{modBy}
         , MOD_DTM = SYSDATE
    WHERE  DOC_ID = #{docId}
    </update>
</mapper>	






















