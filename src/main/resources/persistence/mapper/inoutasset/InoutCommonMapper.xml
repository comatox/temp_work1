<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.skshieldus.esecurity.repository.inoutasset.InoutCommonRepository">

  <select id="selectInOutWriteView" resultType="CamelHashMap" parameterType="Integer">
    SELECT
    INOUT_APPL_NO,
    WRITEDATE,
    WRITESEQ,
    COMPANYKND,
    COMPANYAREAKND,
    COMPANYNO,
    (SELECT DETL_NM from CO_CODE_D where GRP_CD = 'F004' AND ETC1 = COMPANYNO) AS COMPANYNO_NM,
    FN_GET_COMP_NM(COMP_ID) AS COMP_NM,
    INOUTSERIALNO,
    PRNO,
    DEPT_CD,
    EMP_NO,
    FN_GET_EMP_DEPT_JW_NM(EMP_NO) AS EMP_NM,
    EMP_TEL,
    OUTCOMPANYKND,
    MYCOMPANYNO,
    CASE
    WHEN OUTCOMPANYKND = '1' THEN '자사사업장 ' || '[ ' || (select DETL_NM from co_code_d where grp_cd = 'F004' AND ETC1 = MYCOMPANYNO) || ' ' || FN_GET_DEPT_NM(OUTCOMPANYDEPT_CD) ||' ]'
    WHEN OUTCOMPANYKND = '2' THEN '외부업체 ' || '[ ' || SYSTEMPARTNERNM || DECODE(PARTNER_ETC_NM, null, '', '', '', ' '||PARTNER_ETC_NM) ||' ]'
    WHEN OUTCOMPANYKND = '3' THEN '해외법인 ' || '[ ' || FN_GET_FOREIGN_COMP_NM(FOREIGN_COMP) ||' ]'
    ELSE ''
    END AS OUTCOMPANYKND_NM,
    RETURNCOMPANYAREAKND,
    ( SELECT DETL_NM FROM CO_CODE_D WHERE GRP_CD = 'F004' AND ETC2= A.RETURNCOMPANYAREAKND  ) AS RETURNCOMPANYAREAKND_NM,
    SYSTEMPARTNERID,
    FN_GET_PARTNER_NM(SYSTEMPARTNERID) AS SYSTEMPARTNERNM,
    OUTCOMPANYDEPT_CD,
    FN_GET_DEPT_NM(OUTCOMPANYDEPT_CD) AS OUTCOMPANYDEPT_NM,
    INOUTKND,
    OUTREASONID,
    FN_GET_CODE_NM('D001', OUTREASONID) AS OUTREASONID_NM,
    OUTREASONSUBKND,
    FN_GET_CODE_NM('D003', OUTREASONSUBKND) AS OUTREASONSUBKND_NM,
    OUTDATE,
    INDATE,
    REALINDATE,
    INOUTETC,
    ARTICLEKNDNO,
    DECODE(ARTICLEKNDNO, '1', '물품', '2', '휴대용전산저장장치', '3', '문서', '4','Wafer/Substrate','5','Wafer/Substrate','6','원자재/완제품/PKG Chip','') AS ARTICLEKNDNO_NM,
    ARTICLEGROUPID,
    ( SELECT B.ARTICLEGROUPNAME FROM ARTICLEGROUP B WHERE A.ARTICLEKNDNO = B.ARTICLEKNDNO AND A.ARTICLEGROUPID = B.ARTICLEGROUPID ) AS ARTICLEGROUPNM,
    DOCUMENTKND,
    PUBLISHDEPTCHKYN,
    LEAVEDEPTCHKYN,
    LEAVEAPPROVALID,
    APPROVALREQUESTYN,
    APPROVALKND,
    PUBLISHDEPTOKYN,
    LEAVEDEPTOKYN,
    OUTGATEOKYN,
    INGATEOKYN,
    ROUTGATEOKYN,
    RINGATEOKYN,
    FINISHKND,
    INDATEDELAYKND,
    DOCUMENTMOVEKND,
    NOTINCHANGEKND,
    OUTGATEETC,
    INGATEETC,
    ROUTGATEETC,
    RINGATEETC,
    INEMP_NO,
    INDEPT_CD,
    FIRSTINPUTDATE,
    FIRSTINPUTTIME,
    LASTUPDATEDATE,
    LASTUPDATETIME,
    DOC_ID,
    CASE
    WHEN OUTCOMPANYKND = '1' THEN DECODE(INOUTKND, '1', '반입필요', '2', '반입불요', '')
    ELSE DECODE(INOUTKND, '1', '반입필요', '2', '반입불요(무상)', '3', '반입불요(유상)', '')
    END AS INOUTKNDNAME,
    FINISHED_CHANGE,
    PARTNER_ETC_NM,
    SEND_YN, SEND_FILENAME, SEND_FILEID, SEND_FILEPATH,
    FOREIGN_COMP,
    CALLING_KND,
    A.COP_URL,
    TO_CHAR(ADD_MONTHS(TO_DATE(WRITEDATE,'YYYY-MM-DD'),12),'YYYY-MM-DD') WRITEDATE2,
    TO_CHAR(ADD_MONTHS(TO_DATE(INDATE,'YYYY-MM-DD'),3),'YYYY-MM-DD') INDATE2
    FROM SECURITYADM.INOUTWRITE A
    WHERE INOUT_APPL_NO = #{inoutApplNo}
  </select>

  <select id="selectInOutArticleList" resultType="CamelHashMap" parameterType="Integer">
    SELECT
    INOUT_APPL_NO,
    WRITEDATE,
    WRITESEQ,
    WRITEASEQ,
    COMPANYKND,
    COMPANYAREAKND,
    COMPANYNO,
    ARTICLEKNDNO,
    ARTICLENAME AS ARTICLENAME,
    ARTICLEGROUPID,
    MATERIAL_ID,
    ARTICLEID,
    ARTICLECOMPUTERIZEID,
    SERIALNO,
    INOUTCNT,
    OUTCNT,
    INCNT,
    ROUTCNT,
    RINCNT,
    UNITNAME,
    ASIZE,
    IMAGEPATH,
    INSTALLDEPT,
    CHARGENAME,
    USENAME,
    VENDERPN,
    JASANNOKND,
    JSNO,
    MMNO,
    DEPTNAME,
    FILEPATH,
    FILEID,
    FILENAME,
    PRD_ATTR
    FROM SECURITYADM.INOUTARTICLELIST
    WHERE INOUT_APPL_NO = #{inoutApplNo}
    ORDER BY WRITEASEQ ASC
  </select>

  <select id="selectInoutProcess" resultType="CamelHashMap" parameterType="Integer"><![CDATA[
    SELECT
      CASE OUTGATEOKYN
        WHEN 0 THEN                          OUT_COMP_NM || '[미반출] ▶ '
        WHEN 1 THEN '<FONT COLOR=BLUE>'   || OUT_COMP_NM || '[반출] ▶</FONT> '
        WHEN 2 THEN '<FONT COLOR=RED>'    || OUT_COMP_NM || '[부결] ▶</FONT> '
        ELSE        '<FONT COLOR=PURPLE>' || OUT_COMP_NM || '[부분반출] ▶</FONT> '
        END AS OUT_GATE_STATUS_NM,
      CASE INGATEOKYN
        WHEN 0 THEN                          DECODE( OUTCOMPANYKND, 1, IN_COMP_NM, '3', FN_GET_FOREIGN_COMP_NM(FOREIGN_COMP), SYSTEMPARTNERNM ||' ' || PARTNER_ETC_NM) || '[미반입] ▶ '
        WHEN 1 THEN '<FONT COLOR=BLUE>'   || DECODE( OUTCOMPANYKND, 1, IN_COMP_NM, '3', FN_GET_FOREIGN_COMP_NM(FOREIGN_COMP), SYSTEMPARTNERNM ||' ' || PARTNER_ETC_NM) || '[반입] ▶</FONT> '
        WHEN 2 THEN '<FONT COLOR=RED>'    || DECODE( OUTCOMPANYKND, 1, IN_COMP_NM, '3', FN_GET_FOREIGN_COMP_NM(FOREIGN_COMP), SYSTEMPARTNERNM ||' ' || PARTNER_ETC_NM) || '[부결] ▶</FONT> '
        ELSE        '<FONT COLOR=PURPLE>' || DECODE( OUTCOMPANYKND, 1, IN_COMP_NM, '3', FN_GET_FOREIGN_COMP_NM(FOREIGN_COMP), SYSTEMPARTNERNM ||' ' || PARTNER_ETC_NM) || '[부분반입] ▶</FONT> '
        END AS IN_GATE_STATUS_NM,
      CASE ROUTGATEOKYN
        WHEN 0 THEN                          DECODE( OUTCOMPANYKND, 1, IN_COMP_NM, '3', FN_GET_FOREIGN_COMP_NM(FOREIGN_COMP), SYSTEMPARTNERNM ||' ' || PARTNER_ETC_NM) || '[미반출] ▶ '
        WHEN 1 THEN '<FONT COLOR=BLUE>'   || DECODE( OUTCOMPANYKND, 1, IN_COMP_NM, '3', FN_GET_FOREIGN_COMP_NM(FOREIGN_COMP), SYSTEMPARTNERNM ||' ' || PARTNER_ETC_NM) || '[반출] ▶</FONT> '
        WHEN 2 THEN '<FONT COLOR=RED>'    || DECODE( OUTCOMPANYKND, 1, IN_COMP_NM, '3', FN_GET_FOREIGN_COMP_NM(FOREIGN_COMP), SYSTEMPARTNERNM ||' ' || PARTNER_ETC_NM) || '[부결] ▶</FONT> '
        ELSE        '<FONT COLOR=PURPLE>' || DECODE( OUTCOMPANYKND, 1, IN_COMP_NM, '3', FN_GET_FOREIGN_COMP_NM(FOREIGN_COMP), SYSTEMPARTNERNM ||' ' || PARTNER_ETC_NM) || '[부분반출] ▶</FONT> '
        END AS R_OUT_GATE_STATUS_NM,
      CASE RINGATEOKYN
        WHEN 0 THEN                          RETURNCOMPANYAREAKND_NM || '[미반입]  '
        WHEN 1 THEN '<FONT COLOR=BLUE>'   || RETURNCOMPANYAREAKND_NM || '[반입] </FONT> '
        WHEN 2 THEN '<FONT COLOR=RED>'    || RETURNCOMPANYAREAKND_NM || '[부결]</FONT> '
        ELSE        '<FONT COLOR=PURPLE>' || RETURNCOMPANYAREAKND_NM || '[부분반입]</FONT> '
        END AS R_IN_GATE_STATUS_NM
    FROM (
           SELECT
             INOUTKND,
             FN_GET_COMP_NM(COMPANYNO) AS OUT_COMP_NM,
             OUTGATEOKYN,
             INGATEOKYN,
             OUTCOMPANYKND,
             (select DETL_NM from co_code_d where grp_cd = 'F003' and (ETC2 = MYCOMPANYNO OR ETC3 = MYCOMPANYNO OR ETC4 = MYCOMPANYNO)) AS IN_COMP_NM,
             SYSTEMPARTNERNM,
             FOREIGN_COMP,
             PARTNER_ETC_NM,
             ROUTGATEOKYN,
             RINGATEOKYN,
             ( SELECT DETL_NM FROM CO_CODE_D WHERE GRP_CD = 'F004' AND ETC2 = A.RETURNCOMPANYAREAKND  ) AS RETURNCOMPANYAREAKND_NM
           FROM INOUTWRITE A
           WHERE INOUT_APPL_NO = #{inoutApplNo}
         )]]>
	</select>

  <select id="selectInDateChangeHistory" resultType="CamelHashMap" parameterType="Map">
    SELECT
      ROW_NUMBER() OVER( ORDER BY REQUESTINDATE ASC ) AS ROW_NUM,
      BEFOREINDATE,
      REQUESTINDATE,
      FN_GET_EMP_JW_NM( (SELECT EMP_ID FROM AP_DOC WHERE DOC_ID=A.DOC_ID)) AS REQUEST_EMP_NM,
      FN_GET_EMP_JW_NM(EMP_NO) AS APPR_EMP_NM,
      APPROVALSTATE,
      CASE
        WHEN APPROVALSTATE = '0' THEN '대기'
        WHEN APPROVALSTATE = '1' THEN '신청'
        WHEN APPROVALSTATE = '2' THEN '승인'
        WHEN APPROVALSTATE = '3' THEN '관리자승인'
        WHEN APPROVALSTATE = '4' THEN '부결'
        WHEN APPROVALSTATE = '5' THEN '관리자부결'
        ELSE ''
        END AS APPROVALSTATE_NM,
      APPRDATE,
      CASE
        WHEN APPROVALSTATE = '4' OR APPROVALSTATE = '5' THEN DELAYCANCELETC
        ELSE DELAYETC
        END ETC
    FROM SECURITYADM.INDATEDELAYHISTORY A
    WHERE WRITEDATE = #{writedate}
      AND WRITESEQ = #{writeseq}
  </select>

  <select id="selectEmpChangeHistory" resultType="CamelHashMap" parameterType="Map">
    SELECT
      ROW_NUMBER() OVER( ORDER BY APPRDATE ASC ) AS ROW_NUM,
      FN_GET_EMP_JW_NM(BEFOREEMP_NO) AS BEFORE_EMP_NM,
      FN_GET_EMP_JW_NM(CHANGEEMP_NO) AS CHANGE_EMP_NM,
      FN_GET_EMP_JW_NM( (SELECT EMP_ID FROM AP_DOC WHERE DOC_ID=A.DOC_ID)) AS REQUEST_EMP_NM,
      FN_GET_EMP_JW_NM(DAEMP_NO) AS APPR_EMP_NM,
      APPROVALSTATE,
      CASE
        WHEN APPROVALSTATE = '0' THEN '대기'
        WHEN APPROVALSTATE = '1' THEN '신청'
        WHEN APPROVALSTATE = '2' THEN '승인'
        WHEN APPROVALSTATE = '3' THEN '관리자승인'
        WHEN APPROVALSTATE = '4' THEN '부결'
        WHEN APPROVALSTATE = '5' THEN '관리자부결'
        ELSE ''
        END AS APPROVALSTATE_NM,
      APPRDATE,
      CASE
        WHEN APPROVALSTATE = '4' OR APPROVALSTATE = '5' THEN DMCANCELETC
        ELSE DMCHANGEETC
        END ETC
    FROM SECURITYADM.DOCUMENTMOVE A
    WHERE WRITEDATE = #{writedate}
      AND WRITESEQ = #{writeseq}
  </select>

  <select id="selectInOutKndChangeHistory" resultType="CamelHashMap" parameterType="Map">
    SELECT
      ROW_NUMBER() OVER( ORDER BY REQUESTDATE ASC ) AS ROW_NUM,
      BEFOREINOUTKND AS BEFOREINOUTKND,
      DECODE(BEFOREINOUTKND, '1', '반입필요', '2', '반입불요', '') AS BEFOREINOUTKND_NM,
      CHANGEINOUTKND AS CHANGEINOUTKND,
      DECODE(CHANGEINOUTKND, '1', '반입필요', '2', '반입불요(무상)', '3', '반입불요(유상)', '') AS CHANGEINOUTKND_NM,
      FN_GET_EMP_JW_NM( (SELECT EMP_ID FROM AP_DOC WHERE DOC_ID=A.DOC_ID)) AS REQUEST_EMP_NM,
      FN_GET_EMP_JW_NM(APPROVALEMP_NO) AS APPR_EMP_NM,
      APPROVALSTATE,
      CASE
        WHEN APPROVALSTATE = '0' THEN '대기'
        WHEN APPROVALSTATE = '1' THEN '신청'
        WHEN APPROVALSTATE = '2' THEN '승인'
        WHEN APPROVALSTATE = '3' THEN '관리자승인'
        WHEN APPROVALSTATE = '4' THEN '부결'
        WHEN APPROVALSTATE = '5' THEN '관리자부결'
        ELSE ''
        END AS APPROVALSTATE_NM,
      APPROVALDATE AS APPRDATE,
      CASE
        WHEN APPROVALSTATE = '4' OR APPROVALSTATE = '5' THEN CANCELETC
        ELSE NICHANGEETC
        END ETC
    FROM SECURITYADM.NOTINCHANGE A
    WHERE WRITEDATE = #{writedate}
      AND WRITESEQ = #{writeseq}
  </select>

  <select id="selectFinishChangeHistory" resultType="CamelHashMap" parameterType="Map">
    SELECT
      ROW_NUMBER() OVER( ORDER BY APPRDATE ASC ) AS ROW_NUM,
      FN_GET_CODE_NM('D004', REQUEST_CODE) AS REQUEST_CODE_NM,
      APPROVALSTATE,
      CASE
        WHEN APPROVALSTATE = '0' THEN '대기'
        WHEN APPROVALSTATE = '1' THEN '신청'
        WHEN APPROVALSTATE = '2' THEN '승인'
        WHEN APPROVALSTATE = '3' THEN '관리자승인'
        WHEN APPROVALSTATE = '4' THEN '부결'
        WHEN APPROVALSTATE = '5' THEN '관리자부결'
        ELSE ''
        END AS APPROVALSTATE_NM,
      APPRDATE,
      CASE
        WHEN APPROVALSTATE = '4' OR APPROVALSTATE = '5' THEN DMCANCELETC
        ELSE DMCANCELETC
        END ETC,
      REQUEST_EMPNO,
      FN_GET_EMP_DEPT_JW_NM(REQUEST_EMPNO) AS REQUEST_EMP_NM
    FROM SECURITYADM.FINISHED_CHANGE_HISTORY
    WHERE WRITEDATE = #{writedate}
      AND WRITESEQ = #{writeseq}
  </select>

  <select id="selectCallingHistory" resultType="CamelHashMap" parameterType="Map">
    SELECT
      ROW_NUMBER() OVER( ORDER BY CALLING_APPL_NO ASC ) AS ROW_NUM,
      FN_GET_EMP_JW_NM(REQUEST_EMPNO) AS REQUEST_EMP_NM,
      APPROVALSTATE,
      CASE
        WHEN APPROVALSTATE = '0' THEN '대기'
        WHEN APPROVALSTATE = '1' THEN '신청'
        WHEN APPROVALSTATE = '2' THEN '승인'
        WHEN APPROVALSTATE = '3' THEN '관리자승인'
        WHEN APPROVALSTATE = '4' THEN '부결'
        WHEN APPROVALSTATE = '5' THEN '관리자부결'
        ELSE ''
        END AS APPROVALSTATE_NM,
      APPRDATE,
      CASE
        WHEN APPROVALSTATE = '4' OR APPROVALSTATE = '5' THEN DELAYCANCELETC
        ELSE DELAYETC
        END ETC,
      BEFOREINDATE,
      REQUESTINDATE
    FROM SECURITYADM.CALLING_HISTORY
    WHERE WRITEDATE = #{writedate}
      AND WRITESEQ = #{writeseq}
  </select>

</mapper>